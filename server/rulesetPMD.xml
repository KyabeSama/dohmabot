<?xml version="1.0"?>

<ruleset name="Custom Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        My custom rules
    </description>

    <!-- bestpractices -->
    <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
    <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
    <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
    <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">
        <properties>
            <property name="foreachReassign" value="deny" />
            <property name="forReassign" value="deny" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
    <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP">
        <properties>
            <property name="checkAddressTypes" value="IPv4 mapped IPv6|IPv6|IPv4" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/CheckResultSet" />
    <rule ref="category/java/bestpractices.xml/ConstantsInInterface">
        <properties>
            <property name="ignoreIfHasMethods" value="true" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
    <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation">
        <properties>
            <property name="testClassPattern" value="Test" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage" />
    <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">
        <properties>
            <property name="maximumAsserts" value="1" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/JUnitUseExpected" />
    <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
    <rule ref="category/java/bestpractices.xml/MissingOverride" />
    <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">
        <properties>
            <property name="strictMode" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons" />
    <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons" />
    <rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
    <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
    <rule ref="category/java/bestpractices.xml/SystemPrintln" />
    <rule ref="category/java/bestpractices.xml/UnusedFormalParameter">
        <properties>
            <property name="checkAll" value="true" />
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedImports" />
    <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
    <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
    <rule ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue" />
    <rule ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue" />
    <rule ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue" />
    <rule ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals" />
    <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
    <rule ref="category/java/bestpractices.xml/UseVarargs" />
    <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean" />
    <!-- bestpractices -->

    <!-- Code Style -->
    <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
    <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
    <rule ref="category/java/codestyle.xml/BooleanGetMethodName">
        <properties>
            <property name="checkParameterizedMethods" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
    <rule ref="category/java/codestyle.xml/ConfusingTernary">
        <properties>
            <property name="ignoreElseIf" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/ControlStatementBraces">
        <properties>
            <property name="checkIfElseStmt" value="true" />
            <property name="checkSingleIfStmt" value="true" />
            <property name="checkWhileStmt" value="true" />
            <property name="checkForStmt" value="true" />
            <property name="checkDoWhileStmt" value="true" />
            <property name="checkCaseStmt" value="false" />
            <property name="allowEmptyLoop" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/DuplicateImports" />
    <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass">
        <properties>
            <property name="ignoreEnumDeclarations" value="false" />
            <property name="ignoreAnonymousClassDeclarations" value="false" />
            <property name="ignoreInterfaceDeclarations" value="false" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
    <rule ref="category/java/codestyle.xml/GenericsNaming" />
    <rule ref="category/java/codestyle.xml/IdenticalCatchBranches" />
    <rule ref="category/java/codestyle.xml/LinguisticNaming">
        <properties>
            <property name="ignoredAnnotations" value="java.lang.Override" />
            <property name="checkBooleanMethod" value="true" />
            <property name="checkGetters" value="true" />
            <property name="checkSetters" value="true" />
            <property name="checkPrefixedTransformMethods" value="true" />
            <property name="checkTransformMethods" value="false" />
            <property name="booleanMethodPrefixes" value="is|has|can|have|will|should" />
            <property name="transformMethodNames" value="to|as" />
            <property name="checkFields" value="true" />
            <property name="checkVariables" value="true" />
            <property name="booleanFieldPrefixes" value="is|has|can|have|will|should" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" />
    <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" />
    <rule ref="category/java/codestyle.xml/NoPackage" />
    <rule ref="category/java/codestyle.xml/OnlyOneReturn" />
    <rule ref="category/java/codestyle.xml/PackageCase" />
    <rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />
    <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
    <rule ref="category/java/codestyle.xml/UseDiamondOperator" />
    <rule ref="category/java/codestyle.xml/UselessParentheses" />
    <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals">
        <properties>
            <property name="acceptableDecimalLength" value="4" />
        </properties>
    </rule>
    <!-- Code Style -->

    <!-- Design -->
    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
    <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
    <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
        <properties>
            <property name="problemDepth" value="3" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
    <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
    <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures" />
    <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
    <rule ref="category/java/design.xml/CollapsibleIfStatements" />
    <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
    <rule ref="category/java/design.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" value="10.0" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/LogicInversion" />
    <rule ref="category/java/design.xml/SimplifiedTernary" />
    <rule ref="category/java/design.xml/SimplifyBooleanAssertion" />
    <rule ref="category/java/design.xml/SwitchDensity">
        <properties>
            <property name="minimum" value="10.0" />
        </properties>
    </rule>
    <rule ref="category/java/design.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="10" />
        </properties>
    </rule>
    <!-- Design -->

    <!-- Documentation -->
    <rule ref="category/java/documentation.xml/CommentRequired">
        <properties>
            <property name="methodWithOverrideCommentRequirement" value="Ignored" />
            <property name="accessorCommentRequirement" value="Ignored" />
            <property name="headerCommentRequirement" value="Required" />
            <property name="fieldCommentRequirement" value="Ignored" />
            <property name="publicMethodCommentRequirement" value="Required" />
            <property name="protectedMethodCommentRequirement" value="Required" />
            <property name="enumCommentRequirement" value="Required" />
            <property name="serialVersionUIDCommentRequired" value="Ignored" />
        </properties>
    </rule>
    <rule ref="category/java/documentation.xml/CommentSize">
        <properties>
            <property name="maxLines" value="15" />
            <property name="maxLineLength" value="80" />
        </properties>
    </rule>
    <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor">
        <properties>
            <property name="ignoreExplicitConstructorInvocation" value="false" />
        </properties>
    </rule>


    <!-- Documentation -->

</ruleset>
